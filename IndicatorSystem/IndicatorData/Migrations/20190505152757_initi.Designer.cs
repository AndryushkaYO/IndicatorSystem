// <auto-generated />
using System;
using IndicatorData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IndicatorData.Migrations
{
    [DbContext(typeof(IndicatorContext))]
    [Migration("20190505152757_initi")]
    partial class initi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IndicatorData.Models.IndicatorPerson", b =>
                {
                    b.Property<string>("MobilePhone")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FullName");

                    b.Property<int?>("typeId");

                    b.HasKey("MobilePhone");

                    b.HasIndex("typeId");

                    b.ToTable("IndicatorPersons");
                });

            modelBuilder.Entity("IndicatorData.Models.IndicatorTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("amount");

                    b.Property<DateTime>("date");

                    b.Property<string>("userId");

                    b.Property<string>("workerMobilePhone");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.HasIndex("workerMobilePhone");

                    b.ToTable("IndicatorTable");
                });

            modelBuilder.Entity("IndicatorData.Models.IndicatorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Limit");

                    b.Property<string>("Unit");

                    b.HasKey("Id");

                    b.ToTable("IndicatorTypes");
                });

            modelBuilder.Entity("IndicatorData.Models.LoginInfo", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.HasKey("Email");

                    b.ToTable("LoginInfos");
                });

            modelBuilder.Entity("IndicatorData.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FullName");

                    b.Property<string>("LoginInfoEmail");

                    b.HasKey("Id");

                    b.HasIndex("LoginInfoEmail");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IndicatorData.Models.IndicatorPerson", b =>
                {
                    b.HasOne("IndicatorData.Models.IndicatorType", "type")
                        .WithMany()
                        .HasForeignKey("typeId");
                });

            modelBuilder.Entity("IndicatorData.Models.IndicatorTable", b =>
                {
                    b.HasOne("IndicatorData.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.HasOne("IndicatorData.Models.IndicatorPerson", "worker")
                        .WithMany()
                        .HasForeignKey("workerMobilePhone");
                });

            modelBuilder.Entity("IndicatorData.Models.User", b =>
                {
                    b.HasOne("IndicatorData.Models.LoginInfo", "LoginInfo")
                        .WithMany()
                        .HasForeignKey("LoginInfoEmail");
                });
#pragma warning restore 612, 618
        }
    }
}
